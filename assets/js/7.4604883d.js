(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{172:function(t,a,e){"use strict";e.r(a);var r=e(0),i=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"js相等性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js相等性","aria-hidden":"true"}},[t._v("#")]),t._v(" JS相等性")]),t._v(" "),e("h3",{attrs:{id:"es2015中有四种相等算法："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es2015中有四种相等算法：","aria-hidden":"true"}},[t._v("#")]),t._v(" ES2015中有四种相等算法：")]),t._v(" "),e("ul",[e("li",[t._v("非严格相等比较 (==)")]),t._v(" "),e("li",[t._v("严格相等比较 (===): 用于 Array.prototype.indexOf, Array.prototype.lastIndexOf, 和 case-matching")]),t._v(" "),e("li",[t._v("同值零: 用于 %TypedArray% 和 ArrayBuffer 构造函数、以及Map和Set操作, 并将用于 ES2016/ES7 中的String.prototype.includes")]),t._v(" "),e("li",[t._v("同值: 用于所有其他地方")])]),t._v(" "),e("h3",{attrs:{id:"javascript提供三种不同的值比较操作："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript提供三种不同的值比较操作：","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript提供三种不同的值比较操作：")]),t._v(" "),e("ul",[e("li",[t._v('严格相等 ("triple equals" 或 "identity")，使用 === ,')]),t._v(" "),e("li",[t._v('宽松相等 ("double equals") ，使用 ==')]),t._v(" "),e("li",[t._v("以及 Object.is （ECMAScript 2015/ ES6 新特性）")])])])}],!1,null,null,null);i.options.__file="jsEqual.md";a.default=i.exports}}]);